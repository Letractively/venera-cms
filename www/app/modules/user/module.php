<?phpinclude(MDIR.'include/user.class.php');include(MDIR.'include/user.form.php');function init_module(){				if(MODE=='admin') breadcrumbs::$items=array(array('url'=>l('admin'),'title'=>lt('crumb_admin')),array('url'=>l('admin/user'),'title'=>lt('crumb_user')));				else breadcrumbs::$items=array(array('url'=>l(''),'title'=>lt('crumb_main')),array('url'=>l('user'),'title'=>lt('crumb_user')));								$options=venus_options_load('user','json');             	core::$options['registration']=$options['value']->o[0];				core::$options['activation']=$options['value']->o[1];				$items=array('view_user'=>0,'add_user'=>1,'edit_user'=>2,'delete_user'=>3);				venus_ac_table($options['value']->a,$items);			}function module_action($act=FALSE){				$act=($act==FALSE)?core::$query[2]:$act;				if(!function_exists('user_action_'.$act)) throw new NotFoundException('Action not found!');				call_user_func('user_action_'.$act);			}//MAIN METHOD OF THIS MODULEfunction module_index(){				module_action('userlist');			}//USERS LISTfunction user_action_userlist(){				if(!access('view_user') or MODE!='admin') throw new AccessException();				venus_ctpl(TDIR.'views/user/list.php');				$pNum=(isset(core::$query[3]) and is_numeric(core::$query[3]))?intval(core::$query[3]):0;            	$pCount=(isset(core::$query[4]) and is_numeric(core::$query[4]))?intval(core::$query[4]):20;            	$l1=$pNum*$pCount;				$query='SELECT * FROM '.db::table('users').' ORDER BY uID DESC LIMIT '.$l1.','.$pCount.';';				$r=db::query($query);				$i=0;				while($row=db::fetch_array($r)){						$user=new user;						$user->initFromArray($row);						$users[]=$user;					}				$query='SELECT count(*) FROM '.db::table('users').';';				$arr=db::fetch_array(db::query($query));				venus_set('pCount',$pCount);				venus_set('pNum',$pNum);				venus_set('users_count',$arr[0]);				venus_set('users',$users);			}//CHECKERSfunction user_exists($email,$uid=0){				$query='SELECT uID FROM '.db::table('users').' WHERE email=? and uID!=?;';				$r=db::query($query,array(htmlspecialchars($email),intval($uid)));				if(db::num_rows($r)>0) return TRUE;				return FALSE;			}function user_r_check_data(){           		$uForm=new UserForm();           		$uForm->_reg_form();          		$uForm->validate($_POST);            	if(!$uForm->validated or $_POST['password']!=$_POST['password2']) throw new MessageException(lt('incorrect_data'),MT_ERROR);				if(user_exists($_POST['email']))				 	throw new MessageException(lt('erroruserexists'),MT_ERROR);			}function user_a_check_data(){           		$uForm=new UserForm();           		$uForm->_add_form();           		$_POST['active']=isset($_POST['active']);          		$uForm->validate($_POST);            	if(!$uForm->validated) throw new MessageException(lt('incorrect_data'),MT_ERROR);				if(user_exists($_POST['email']))				 	throw new MessageException(lt('erroruserexists'),MT_ERROR);			}function user_e_check_data(){				if(!is_numeric(core::$query[3])) throw new MessageException(lt('incorrect_data'),MT_ERROR);           		$uForm=new UserForm();           		$uForm->_edit_form(&$this);           		$_POST['active']=isset($_POST['active']);          		$uForm->validate($_POST);            	if(!$uForm->validated) throw new MessageException(lt('incorrect_data'),MT_ERROR);				if(user_exists($_POST['email'],core::$query[3]))				 	throw new MessageException(lt('erroruserexists'),MT_ERROR);			}function user_pf_check_data(){           		$uForm=new UserForm();           	 	$uForm->_profile_form();			 	$uForm->validate($_POST);				if(user_exists($_POST['email'],core::$user['uID']))						throw new MessageException(lt('erroruserexists'),MT_ERROR);             	if(!$uForm->validated)           				throw new MessageException(lt('incorrect_data'),MT_ERROR);			}function user_pfp_check_data(){           		$uForm=new UserForm();           	 	$uForm->_profile_pwd_form();			 	$uForm->validate($_POST);             	if(!$uForm->validated or md5($_POST['oldpassword'])!=core::$user['password'] or $_POST['password']!=$_POST['cpassword'])           				throw new MessageException(lt('incorrect_data'),MT_ERROR);			}function user_chp_check_data(){           		$uForm=new UserForm();           		$uForm->_chp_form(core::$query[3]);          		$uForm->validate($_POST);            	if(!$uForm->validated) throw new MessageException(lt('incorrect_data'),MT_ERROR);            	if($_POST['password']!=$_POST['cpassword'])           			throw new MessageException(lt('incorrect_data'),MT_ERROR);			}//USERS MANIPULATE FUNCTIONSfunction user_action_reg(){				if(!isGuest() or core::$options['registration']!='1') throw new AccessException();                venus_ctpl(TDIR.'views/user/registration.php');				$a=isset(core::$query[3])?core::$query[3]:'';				switch($a){					case 'form':						try{							if(isset(core::$query[4]) and core::$query[4]=='send'){								$_POST['active']=(core::$options['activation']=='1')?FALSE:TRUE;								$_POST['gID']=UT_USER;								user_r_check_data();								$t=time();								$c=md5($_POST['email'].'_'.$t);								$sql='INSERT INTO '.db::table('users').' SET gID=?,password=?, email=?,name=?,sername=?,gender=?,birthday=?,birthmonth=?,birthyear=?,active=?, code=?;';                            	db::query($sql,array($_POST['gID'],md5($_POST['password']),$_POST['email'],$_POST['name'],$_POST['sername'],$_POST['gender'],$_POST['birthdate'][0],$_POST['birthdate'][1],$_POST['birthdate'][2],$_POST['active'],$c));                            	//---sending e-mail with registration data ----                            	$tpl=($_POST['active'])?'app/themes/'.core::$settings['interface']['theme'].'/email/registration.email.tpl':'app/themes/'.core::$settings['interface']['theme'].'/email/registration_code.email.tpl';          						$email_tpl=new stpl();          						$email_tpl->vars=$_POST;          						$email_tpl->set('code_link',l('user/action/reg/a/'.$_POST['email'].'/'.$c));          						$email_tpl->set('new_code_link',l('user/action/reg/c/'.$_POST['email']));          						$email=new email($_POST['email'],core::$settings['email']['robot'],core::$settings['email']['admin']);         						$email->send('Registration',$email_tpl->parse($tpl));          						//--------------------------------------------          						venus_message((($_POST['active'])?lt('registrationok'):lt('registrationnext')));          						return;							}							venus_ctpl(TDIR.'views/user/forms/reg.php');							$uForm=new UserForm();							$uForm->_reg_form();						}catch(Exception $e){							venus_error($e->get_message());							$uForm=new UserForm();							$uForm->_reg_form();						}					break;					case 'a':						try{							$email=new CFormField(array('name'=>'email','validation'=>EMAIL_TYPE,'minsize'=>5,'maxsize'=>255,'value'=>core::$query[4]));							$email->validate();							if(!$email->validated) throw new MessageException(lt('incorrect_data'),MT_ERROR);							$sql='SELECT * FROM '.db::table('users').' WHERE email=?;';							$r=db::query($sql,array(core::$query[4]));							if(db::num_rows($r)!=1) throw new MessageException(lt('activationerror'),MT_ERROR);							$data=db::fetch_array($r);							if($data['code']!=core::$query[5]) throw new MessageException(lt('activationerror'),MT_ERROR);;							$sql='UPDATE '.db::table('users').' SET active=1,code=? WHERE email=?';							db::query($sql,array('',core::$query[4]));							//--------------------------------------------							venus_message(lt('accountactivated'));						}catch(Exception $e){							venus_error($e->get_message());						}					break;					case 'c':						try{							$email=new CFormField(array('name'=>'email','validation'=>EMAIL_TYPE,'minsize'=>5,'maxsize'=>255,'value'=>core::$query[4]));							$email->validate();							if(!$email->validated) throw new MessageException(lt('incorrect_data'),MT_ERROR);							$t=time();							$e=core::$query[4];							$c=md5($e.'_'.$t);                    		$sql='SELECT * FROM '.db::table('users').' WHERE email=?;';                    		$r=db::query($sql,array($e));							if(db::num_rows($r)!=1) throw new MessageException(lt('activationcode404'),MT_ERROR);;							$sql='UPDATE '.db::table('users').' SET code=? WHERE email=?;';							db::query($sql,array($c,$e));							//-----ending e-mail with activation code ----  							$email_tpl=new stpl();  							$email_tpl->vars=db::fetch_array($r);          					$email_tpl->set('code_link',l('user/action/reg/a/'.$e.'/'.$c));          					$email_tpl->set('new_code_link',l('user/action/reg/c/'.$e));       						$email=new email($e,core::$settings['email']['robot'],core::$settings['email']['admin']);         					$email->send('Activation code',$email_tpl->parse('app/themes/'.core::$settings['interface']['theme'].'/email/activation.email.tpl'));          					//-------------------------------------------          					venus_message(lt('activationcodesent'));          				}catch(Exception $e){          					venus_error($e->get_message());          				}					break;					default: throw new AccessException();									}			}function user_action_add(){				if(!access('add_user')) throw new AccessException();				venus_ctpl(TDIR.'views/user/forms/user.php');				try{					if(isset(core::$query[3]) and core::$query[3]=='create'){							user_a_check_data();            				$query='INSERT INTO '.db::table('users').' SET gID=?,login=?,name=?,sername=?,password=?, email=?, active=?;';            				db::query($query,array($_POST['gID'],$_POST['login'],$_POST['name'],$_POST['sername'],md5($_POST['password'],$_POST['email'],intval($_POST['active']))));            				venus_message(lt('usercreated'));							module_index();							return TRUE;						}					$uForm=new UserForm();            		$uForm->_add_form();				}catch(Exception $e){					venus_error($e->get_message());					$uForm=new UserForm();            		$uForm->_add_form();				}			}function user_action_edit(){				if(!access('edit_user')) throw new AccessException();				venus_ctpl(TDIR.'views/user/forms/user.php');				try{					if(!is_numeric(core::$query[3])) throw new MessageException(lt('incorrect_data'),MT_ERROR);					$user=new user();    				$user->uID=core::$query[3];    				if(!$user->loadById())  throw new MessageException(lt('incorrect_data'),MT_ERROR);					try{						if(isset(core::$query[4]) and core::$query[4]=='update'){								user_e_check_data();             					$query='UPDATE '.db::table('users').' SET gID=?,login=?,name=?,sername=?,email=?, active=? WHERE uID='.$user->uID.';';             					db::query($query,array($_POST['gID'],$_POST['login'],$_POST['name'],$_POST['sername'],$_POST['email'],intval($_POST['active'])));             					venus_message(lt('userupdated'));							}						$user->loadById();						$uForm=new UserForm();            			$uForm->_edit_form(&$user);					}catch(Exception $e){						$user->loadById();						venus_error($e->get_message());						$uForm=new UserForm();            			$uForm->_edit_form(&$user);					}				}catch(Exception $e){						venus_error($e->get_message());						module_index();				}			}function user_action_drop(){			if(!access('delete_user')) throw new AccessException();			try{				if(!is_numeric(core::$query[3])) throw new MessageException(lt('incorrect_data'),MT_ERROR);				$user=new user();    			$user->uID=core::$query[3];    			if(!$user->loadById())  throw new MessageException(lt('incorrect_data'),MT_ERROR);				$query='DELETE FROM '.db::table('users').' WHERE uID='.$user->uID.';';				db::query($query);				venus_message(lt('userdeleted'));				module_index();			}catch(Exception $e){				venus_error($e->get_message());				module_index();			}		}function user_action_profile(){                if(isGuest()) throw new NotAuthException();				venus_ctpl(TDIR.'views/user/forms/profile.php');				try{					$user=new user();    				$user->uID=core::$user['uID'];    				$user->loadById();					if(isset(core::$query[3]) and core::$query[3]=='update'){							user_pf_check_data();							$_POST['city']=isset($_POST['city'])?$_POST['city']:0;							$query='UPDATE '.db::table('users').' SET  login=?,email=?,name=?,sername=?,city=?,about=?,gender=?,birthday=?,birthmonth=?,birthyear=? WHERE uID='.core::$user['uID'].';';             				db::query($query,array($_POST['login'],$_POST['email'],$_POST['name'],$_POST['sername'],$_POST['city'],$_POST['about'],$_POST['gender'],$_POST['birthdate'][0],$_POST['birthdate'][1],$_POST['birthdate'][2]));             				venus_message(lt('profileupdated'));					}elseif(isset(core::$query[3]) and core::$query[3]=='changepwd'){							user_pfp_check_data();							$query='UPDATE '.db::table('users').' SET password=? WHERE uID='.core::$user['uID'].';';							db::query($query,array(md5($_POST['password'])));							             				venus_message(lt('password_updated'));							core::$user['password']=md5($_POST['password']);					}					//-----------------------------------------------------------------------------------------------					$r=db::query('SELECT * FROM  '.db::table('users').' WHERE uID='.core::$user['uID'].';');					if(db::num_rows($r)==0) throw new NotFoundException();					core::$user=db::fetch_array_assoc($r);					//------------------------------------------------------------------------------------------------					$uForm=new UserForm();           			$uForm->_profile_form();					$upForm=new UserForm();           			$upForm->_profile_pwd_form();				}catch(Exception $e){					venus_error($e->get_message());					$uForm=new UserForm();           			$uForm->_profile_form();					$upForm=new UserForm();           			$upForm->_profile_pwd_form();				}			}function user_action_chpform(){				if(!access('edit_user')) throw new AccessException();				venus_ctpl(TDIR.'views/user/forms/chp.php');				try{					if(!is_numeric(core::$query[3])) throw new MessageException(lt('incorrect_data'),MT_ERROR);					$user=new user();    				$user->uID=core::$query[3];    				if(!$user->loadById())  throw new MessageException(lt('incorrect_data'),MT_ERROR);    				try{						if(isset(core::$query[4]) and core::$query[4]=='update'){								user_chp_check_data();								$query='UPDATE '.db::table('users').' SET password=? WHERE uID='.$user->uID.';';             					db::query($query,array(md5($_POST['password'])));             					venus_message(lt('password_updated'));							}						$uForm=new UserForm();            			$uForm->_chp_form($user->uID);					}catch(Exception $e){						venus_error($e->get_message());						$uForm=new UserForm();            			$uForm->_chp_form($user->uID);					}				}catch(Exception $e){						venus_error($e->get_message());						module_index();				}			}//FUNCTION FOR RANDOM PASSWORD GENERATIONfunction user_generate_password($number){    		$arr = array('a','b','c','d','e','f',                 'g','h','i','j','k','l',                 'm','n','o','p','r','s',                 't','u','v','x','y','z',                 'A','B','C','D','E','F',                 'G','H','I','J','K','L',                 'M','N','O','P','R','S',                 'T','U','V','X','Y','Z',                 '1','2','3','4','5','6',                 '7','8','9','0','.',',',                 '!','?','&','^','$','/',                 '|','+','-');   		 	$pass = "";    		for($i = 0; $i < $number; $i++){     				$index = rand(0, count($arr) - 1);					$pass .= $arr[$index];    			}    		return $pass;  		}function user_action_restorepassword(){			if(!isGuest()) throw new AccessException();			venus_ctpl(TDIR.'views/user/restorepasswd.php');			try{				$le=htmlspecialchars(trim($_POST['email']));				$length=strlen($le);				if($length>255 or $length<2) throw new MessageException(lt('incorrect_data'),MT_ERROR);        		$query='SELECT name,sername,email,login,uID FROM '.db::table('users').' WHERE email=? LIMIT 1;';        		$qr=db::query($query,array($le));        		if(db::num_rows($qr)==0)	throw new MessageException(lt('emailnotfound'),MT_ERROR);         		$r=db::fetch_array_assoc($qr);         		$newpassword=user_generate_password(12);         		$query='UPDATE '.db::table('users').' SET password=? WHERE uID='.$r['uID'].';';            	db::query($query,array(md5($newpassword)));          		//---sending e-mail with new password --------				$r['password']=$newpassword;          		$email_tpl=new stpl();          		$email_tpl->vars=$r;          		$email=new email($r['email'],core::$settings['email']['robot'],core::$settings['email']['admin']);         		$email->send('Password restore system',$email_tpl->parse(TDIR.'email/restorepassword.email.tpl'));          		//--------------------------------------------          		venus_message(lt('passwordsent'));          	}catch(Exception $e){          		venus_error($e->get_message());          	}		}//AUTHORIZATION METHODSfunction module_login(){				if(!isGuest()) return core::add_header('Location: '.l('user/info/'.core::$user['uID']));				venus_ctpl(TDIR.'views/user/login.php');			}function module_info(){				if(!isset(core::$query[2]) or !is_numeric(core::$query[2])) throw new NotFoundException();				$id=intval(core::$query[2]);				$u=db::select_array('SELECT * FROM '.db::table('users').' WHERE uID='.$id.';');				if($u==null)  throw new NotFoundException();				if($u['city']!=0){						$city=db::select_array('SELECT * FROM '.db::table('cities').' WHERE cityID='.$u['city'].';');									$u['city']=($city==null)?'':$city['city_title'];				}				venus_set('user_data',$u);				venus_ctpl(TDIR.'views/user/info.php');			}//settingsfunction user_action_options(){				if(!isAdmin()) throw new AccessException();				include(MDIR.'include/options.form.php');				venus_ctpl(TDIR.'views/user/forms/options.php');				try{					if(isset(core::$query[3]) and core::$query[3]=='update'){							$_POST['registration']=isset($_POST['registration']);							$_POST['activation']=isset($_POST['activation']);							$eForm=new UserModuleOptForm();							$eForm->initEdit();							$eForm->validate($_POST);            				if(!$eForm->validated)            						throw new MessageException(lt('incorrect_data'),MT_ERROR);        					venus_options_update('user','{\"o\":\"'.intval($_POST['registration']).intval($_POST['activation']).'\",\"a\":\"'.user_get_access().'\"}');            				venus_message(lt('options_updated'));						}					$form=new UserModuleOptForm();					$form->_edit_form();				}catch(Exception $e){					venus_error($e->get_message());					$form=new UserModuleOptForm();					$form->_edit_form();				}			}//ACCESS METHODSfunction user_get_access(){               	$items=array('view_user'=>0,'add_user'=>1,'edit_user'=>2,'delete_user'=>3);            	return venus_ac_bydata($_POST,$items);			}?>